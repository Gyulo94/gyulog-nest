// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(cuid())
  email        String    @unique
  name         String?
  password     String
  profileImage String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  blogs        Blog[]
  comments     Comment[]
}

model Category {
  id        String   @id @default(cuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  blogs     Blog[]
}

model Blog {
  id          Int       @id @default(autoincrement())
  title       String
  thumbnail   String
  content     String
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  category    Category  @relation(fields: [categoryId], references: [id])
  categoryId  String
  viewCnt     Int       @default(0)
  isPublished Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  tags        Tag[]
  comments    Comment[]
}

model Comment {
  id           String    @id @default(cuid())
  content      String
  author       String
  password     String?
  profileImage String?
  createdAt    DateTime  @default(now())
  blog         Blog      @relation(fields: [blogId], references: [id])
  blogId       Int
  user         User?     @relation(fields: [userId], references: [id])
  userId       String?
  isDeleted    Boolean   @default(false)
  parentId     String?
  parent       Comment?  @relation("CommentToReplies", fields: [parentId], references: [id])
  replies      Comment[] @relation("CommentToReplies")
}

model Image {
  id        String   @id @default(cuid())
  url       String
  createdAt DateTime @default(now())
}

model Tag {
  id        String   @id @default(cuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  blogs     Blog[]
}
